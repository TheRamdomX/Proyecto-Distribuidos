version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    restart: always

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    restart: always

  mysql:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_DATABASE: waze_db
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  redis:
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  scraper:
    build:
      context: .
      dockerfile: Dockerfile.scraper
    depends_on:
      - kafka
    environment:
      - KAFKA_SERVER=kafka:9092
    restart: always 

  storage:
    build:
      context: .
      dockerfile: Dockerfile.storage
    depends_on:
      - kafka
      - mysql
    restart: always 

  traffic-generator:
    build:
      context: .
      dockerfile: Dockerfile.traffic
    depends_on:
      - kafka
      - mysql
    environment:
      - KAFKA_SERVER=kafka:9092
      - MYSQL_HOST=mysql
      - MYSQL_USER=user
      - MYSQL_PASSWORD=password
      - MYSQL_DATABASE=waze_db
    restart: always  

  cache-system-lru:
    build:
      context: .
      dockerfile: Dockerfile.cache
    depends_on:
      - kafka
      - redis
    environment:
      - KAFKA_SERVER=kafka:9092
      - REDIS_HOST=redis
      - CACHE_POLICY=LRU
    restart: always  

  cache-system-random:
    build:
      context: .
      dockerfile: Dockerfile.cache
    depends_on:
      - kafka
      - redis
    environment:
      - KAFKA_SERVER=kafka:9092
      - REDIS_HOST=redis
      - CACHE_POLICY=Random
    restart: always  

volumes:
  mysql_data:
  redis_data: