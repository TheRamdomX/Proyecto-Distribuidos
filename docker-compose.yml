version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    restart: always

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    restart: always

  mysql:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_DATABASE: waze_db
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    command: --secure-file-priv=/var/lib/mysql-files
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - mysql_files:/var/lib/mysql-files
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-prootpass"]
      interval: 10s
      timeout: 5s
      retries: 5

  # scraper:
  #   build:
  #     context: ./Scraper
  #     dockerfile: Dockerfile
  #   depends_on:
  #     - storage
  #     - elasticsearch
  #     - kafka
  #   environment:
  #     - KAFKA_SERVER=kafka:9092
  #   restart: always 

  storage:
    build:
      context: ./Storage
      dockerfile: Dockerfile
    depends_on:
      - elasticsearch
      - kafka
      - mysql
    restart: always 

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - network.host=0.0.0.0
      - http.port=9200
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      elasticsearch:
        condition: service_healthy
    restart: always

  elastic-inserter:
    build:
      context: ./Elastic
      dockerfile: Dockerfile
    depends_on:
      elasticsearch:
        condition: service_healthy
      storage:
        condition: service_started
    volumes:
      - ./Elastic/data:/elastic/data
      - ./Pig/results:/pig/results
      - ./Filter/results:/filter/results
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    restart: "no"

  # pig-filter:
  #   build:
  #     context: ./Filter
  #     dockerfile: Dockerfile
  #   depends_on:
  #     - elasticsearch
  #     mysql:
  #       condition: service_healthy
  #   environment:
  #     - MYSQL_HOST=mysql
  #     - MYSQL_USER=root
  #     - MYSQL_PASSWORD=rootpass
  #     - MYSQL_DATABASE=waze_db
  #   volumes:
  #     - ./Filter/data:/filter/data
  #     - ./Filter/results:/filter/results
  #     - mysql_files:/var/lib/mysql-files
  #   restart: "no"

  # pig-processor:
  #   build:
  #     context: ./Pig
  #     dockerfile: Dockerfile
  #   depends_on:
  #     pig-filter:
  #       condition: service_completed_successfully
  #   environment:
  #     - MYSQL_HOST=mysql
  #     - MYSQL_USER=root
  #     - MYSQL_PASSWORD=rootpass
  #     - MYSQL_DATABASE=waze_db
  #   volumes:
  #     - ./Pig/data:/pig/data
  #     - ./Pig/results:/pig/results
  #     - ./Filter/results:/filter/results
  #     - mysql_files:/var/lib/mysql-files
  #   restart: "no"

  # redis:
  #   image: redis:alpine
  #   restart: always
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  
  # traffic-generator:
  #   build:
  #     context: ./Trafic
  #     dockerfile: Dockerfile
  #   depends_on:
  #     - kafka
  #     - mysql
  #   environment:
  #     - KAFKA_SERVER=kafka:9092
  #     - MYSQL_HOST=mysql
  #     - MYSQL_USER=user
  #     - MYSQL_PASSWORD=password
  #     - MYSQL_DATABASE=waze_db
  #   restart: always  

  # cache-system-lru:
  #   build:
  #     context: ./Cache
  #     dockerfile: Dockerfile
  #   depends_on:
  #     - kafka
  #     - redis
  #   environment:
  #     - KAFKA_SERVER=kafka:9092
  #     - REDIS_HOST=redis
  #     - CACHE_POLICY=LRU
  #   restart: always  

  # cache-system-random:
  #   build:
  #     context: ./Cache
  #     dockerfile: Dockerfile
  #   depends_on:
  #     - kafka
  #     - redis
  #   environment:
  #     - KAFKA_SERVER=kafka:9092
  #     - REDIS_HOST=redis
  #     - CACHE_POLICY=Random
  #   restart: always  

volumes:
  mysql_data:
  mysql_files:
  elasticsearch_data:
  # redis_data: